"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VsWindowLogger = void 0;
var vscode = require("vscode");
var baseLogger_1 = require("./baseLogger");
var VsWindowLogger = /** @class */ (function (_super) {
    __extends(VsWindowLogger, _super);
    function VsWindowLogger() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VsWindowLogger.prototype.logInfo = function (message) {
        _super.prototype.logIfEnabled.call(this, vscode.window.showInformationMessage, message);
    };
    VsWindowLogger.prototype.logError = function (error) {
        var message = error instanceof Error
            ? error.message
            : error;
        _super.prototype.logIfEnabled.call(this, vscode.window.showErrorMessage, message);
    };
    return VsWindowLogger;
}(baseLogger_1.BaseLogger));
exports.VsWindowLogger = VsWindowLogger;
