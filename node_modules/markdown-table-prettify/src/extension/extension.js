'use strict';
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deactivate = exports.activate = void 0;
var vscode = require("vscode");
var prettyfierFactory_1 = require("./prettyfierFactory");
// This method is called when the extension is activated.
// The extension is activated the very first time the command is executed.
function activate(context) {
    var e_1, _a;
    var supportedLanguageIds = prettyfierFactory_1.getSupportLanguageIds();
    try {
        for (var supportedLanguageIds_1 = __values(supportedLanguageIds), supportedLanguageIds_1_1 = supportedLanguageIds_1.next(); !supportedLanguageIds_1_1.done; supportedLanguageIds_1_1 = supportedLanguageIds_1.next()) {
            var language = supportedLanguageIds_1_1.value;
            context.subscriptions.push(vscode.languages.registerDocumentRangeFormattingEditProvider({ language: language }, prettyfierFactory_1.getDocumentRangePrettyfier()), vscode.languages.registerDocumentFormattingEditProvider({ language: language }, prettyfierFactory_1.getDocumentPrettyfier()));
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (supportedLanguageIds_1_1 && !supportedLanguageIds_1_1.done && (_a = supportedLanguageIds_1.return)) _a.call(supportedLanguageIds_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    var command = "markdownTablePrettify.prettifyTables";
    context.subscriptions.push(vscode.commands.registerTextEditorCommand(command, function (textEditor) {
        if (supportedLanguageIds.indexOf(textEditor.document.languageId) >= 0)
            prettyfierFactory_1.getDocumentPrettyfierCommand().prettifyDocument(textEditor);
    }));
}
exports.activate = activate;
function deactivate() { }
exports.deactivate = deactivate;
